{"version":3,"sources":["reportWebVitals.js","Button.js","Icon.js","Content.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StyledButton","styled","button","primary","Button","text","StyledIcon","div","Icon","Section","Title","h1","SubTitle","Content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCLRQ,EAAeC,IAAOC,OAAV,wKACF,qBAAEC,QAAuB,MAAQ,WAelCC,EANA,SAAC,GAAqB,IAApBD,EAAmB,EAAnBA,QAASE,EAAU,EAAVA,KACxB,OACE,cAACL,EAAD,CAAcG,QAASA,EAAvB,SAAiCE,KCZ/BC,EAAaL,IAAOM,IAAV,wHACA,qBAAEJ,QAAuB,QAAU,YAYpCK,EANF,SAAC,GAAe,IAAdL,EAAa,EAAbA,QACb,OACE,cAACG,EAAD,CAAYH,QAASA,KCPnBM,EAAUR,IAAOM,IAAV,4JAQPG,EAAQT,IAAOU,GAAV,sEAKLC,EAAWX,YAAOS,EAAPT,CAAH,mDAiBCY,EAbC,WACd,OACE,eAACJ,EAAD,WACE,cAACC,EAAD,mCACA,cAACE,EAAD,8BACA,cAAC,EAAD,CAAQT,SAAO,EAACE,KAAK,aACrB,cAAC,EAAD,CAAQA,KAAK,cACb,cAAC,EAAD,CAAMF,SAAO,IACb,cAAC,EAAD,QCvBNW,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,8CACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.3b1244af.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import styled from 'styled-components'\n\nconst StyledButton = styled.button `\n  background: ${({primary}) => primary ? 'red' : 'blue '};\n  border-radius: 1rem;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n  margin: .25rem;\n  padding: .25rem;\n`\n\nconst Button = ({primary, text}) => {\n  return (\n    <StyledButton primary={primary}>{text}</StyledButton>\n  )\n}\n\nexport default Button\n","import styled from 'styled-components'\n\nconst StyledIcon = styled.div `\n  background: ${({primary}) => primary ? 'green' : 'yellow'};\n  border-radius: 100%;\n  margin: .5rem;\n  height: 2rem; width: 2rem;\n`\n\nconst Icon = ({primary}) => {\n  return (\n    <StyledIcon primary={primary} />\n  )\n}\n\nexport default Icon\n","import styled from 'styled-components'\nimport Button from './Button'\nimport Icon from './Icon'\n\nconst Section = styled.div `\n    background-color: #aac9f0;\n    display: flex;\n    flex-direction: column;\n    color: #f0aeaa;\n    border-radius: 15px;\n`\n\nconst Title = styled.h1 `\n  align-self: center;\n  color: #aaecf0;\n`\n\nconst SubTitle = styled(Title)`\n  font-size: .875rem;\n`\n\nconst Content = () => {\n  return (\n    <Section>\n      <Title>ðŸ’… Section</Title>\n      <SubTitle>I am a subtitle</SubTitle>\n      <Button primary text='Me first' />\n      <Button text='Me second' />\n      <Icon primary />\n      <Icon />\n    </Section>\n  )\n}\n\nexport default Content\n\n//Mini Challenge\n// In the same way that we over-rode the style of the Title Component, I would like\n// you to do the same for the SubTitle component, and make a ParagraphTitle that\n//is grey. Put it at the bottom of the Section.\n\n//Mini Challenge\n// In the same way that we added a primary and secondary prop to the two Buttons, can\n// you add two circles, or â€˜Iconsâ€™ below the Buttons, but make them as a functional\n//component that we import into the Content Component. I want the primary Icon to\n//be Green and the secondary to be Yellow.\n\n//Mini Challenge\n// In this mini challenge I would like you to help me out for the next section by\n// adding two plain white buttons with the words 'Click me' in each below the word\n// Section. Please use the approach we have learnt today.\n// We will need this for the next scrim.\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Content from './Content';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Hello World!</h1>\n    <Content />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}